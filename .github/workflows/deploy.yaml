# .github/workflows/deploy-all-snowflake.yaml
name: ❄️ Snowflake Full Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # 1. Checkout full history so diffs work even on first-run
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Python & dependencies
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install schemachange & connector
        run: |
          python -m pip install --upgrade pip
          pip install schemachange snowflake-connector-python

      # 3. Validate Snowflake secrets
      - name: Validate Snowflake env vars
        env:
          SF_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SF_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SF_PWD:       ${{ secrets.SNOWFLAKE_PASSWORD }}
          SF_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SF_WH:        ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SF_DB:        ${{ secrets.SNOWFLAKE_DATABASE }}
        run: |
          for v in SF_ACCOUNT SF_USER SF_PWD SF_ROLE SF_WH SF_DB; do
            if [ -z "${!v}" ]; then
              echo "❌ Missing $v" && exit 1
            fi
          done

      # 4. Write connections.toml for schemachange
      - name: Write Schemachange connections.toml
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
        run: |
          cat > connections.toml <<EOF
[connections.default]
account   = "${SNOWFLAKE_ACCOUNT}"
user      = "${SNOWFLAKE_USER}"
password  = "${SNOWFLAKE_PASSWORD}"
role      = "${SNOWFLAKE_ROLE}"
warehouse = "${SNOWFLAKE_WAREHOUSE}"
database  = "${SNOWFLAKE_DATABASE}"
schema    = ""  # will be filled from filename

[schemachange]
connection = "default"
EOF

      # 5. Detect changes under setup/
      - name: Detect setup/ changes
        id: detect-setup
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            CHG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                  | grep -E '^snowflake/setup/.*\.sql' || true)
            if [ -n "$CHG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      # 6. Bootstrap all schemas if any setup script changed (or manual dispatch)
      - name: Bootstrap schemas
        if: github.event_name == 'workflow_dispatch' || steps.detect-setup.outputs.run == 'true'
        env:
          SNOWFLAKE_OCSP_FAIL_OPEN: "true"
        run: |
          echo "🚀 Running initial bootstrap for all schemas…"
          schemachange \
            --connection default \
            --root-folder snowflake/setup \
            --change-history-table BOOTSTRAP_HISTORY \
            --create-change-history-table \
            -v
          echo "✅ Bootstrap complete."

      # 7. Detect changes under migration/
      - name: Detect migration/ changes
        id: detect-migration
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            MIG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                  | grep -E '^snowflake/migration/.*\.sql' || true)
            if [ -n "$MIG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      # 8. Apply incremental migrations if any changed
      - name: Apply incremental migrations
        if: steps.detect-migration.outputs.run == 'true'
        env:
          SNOWFLAKE_OCSP_FAIL_OPEN: "true"
        run: |
          echo "🔁 Applying incremental migrations for all schemas…"
          schemachange \
            --connection default \
            --root-folder snowflake/migration \
            --change-history-table CHANGE_HISTORY \
            --create-change-history-table \
            -v
          echo "✅ Incremental migrations complete."

      # 9. Early exit if nothing to do
      - name: Nothing to do
        if: >
          steps.detect-setup.outputs.run == 'false' &&
          steps.detect-migration.outputs.run == 'false' &&
          github.event_name != 'workflow_dispatch'
        run: echo "✔️ No changes detected in setup/ or migration/; skipping."
