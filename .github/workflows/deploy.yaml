name: ❄️ Snowflake Full Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed to detect diffs correctly

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install schemachange snowflake-connector-python

      - name: Write Schemachange connections.toml
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
        run: |
          cat > connections.toml <<EOF
          [connections.default]
          account   = "${SNOWFLAKE_ACCOUNT}"
          user      = "${SNOWFLAKE_USER}"
          password  = "${SNOWFLAKE_PASSWORD}"
          role      = "${SNOWFLAKE_ROLE}"
          warehouse = "${SNOWFLAKE_WAREHOUSE}"
          database  = "${SNOWFLAKE_DATABASE}"
          schema    = ""

          [schemachange]
          connection = "default"
          EOF

      - name: Detect setup/ changes
        id: detect-setup
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            CHG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                  | grep -E '^snowflake/setup/.*\.sql' || true)
            if [ -n "$CHG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run setup scripts per schema
        if: github.event_name == 'workflow_dispatch' || steps.detect-setup.outputs.run == 'true'
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_OCSP_FAIL_OPEN: "true"
        run: |
          echo "🚀 Running setup scripts for all schemas..."

          for file in snowflake/setup/*.sql; do
            [ -e "$file" ] || continue
            schema=$(basename "$file" .sql | cut -d'_' -f1)
            echo "📁 Running setup for schema: $schema (file: $file)"
            schemachange \
              --connection default \
              --root-folder snowflake/setup \
              --file-filter "$(basename $file)" \
              --change-history-table ${schema}.CHANGE_HISTORY \
              --create-change-history-table \
              -v
          done

      - name: Detect migration/ changes
        id: detect-migration
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            MIG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                  | grep -E '^snowflake/migration/.*\.sql' || true)
            if [ -n "$MIG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run migration scripts per schema
        if: steps.detect-migration.outputs.run == 'true'
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_OCSP_FAIL_OPEN: "true"
        run: |
          echo "🔁 Running incremental migrations per schema..."

          for file in snowflake/migration/*.sql; do
            [ -e "$file" ] || continue
            schema=$(basename "$file" .sql | cut -d'_' -f1)
            echo "📁 Running migration for schema: $schema (file: $file)"
            schemachange \
              --connection default \
              --root-folder snowflake/migration \
              --file-filter "$(basename $file)" \
              --change-history-table ${schema}.CHANGE_HISTORY \
              --create-change-history-table \
              -v
          done

      - name: Nothing to do
        if: >
          steps.detect-setup.outputs.run == 'false' &&
          steps.detect-migration.outputs.run == 'false' &&
          github.event_name != 'workflow_dispatch'
        run: echo "✅ No setup or migration changes detected. Skipping deployment."
