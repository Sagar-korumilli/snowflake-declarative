name: ❄️ Snowflake Full Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # 1) Checkout at depth=0 so we have full history
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Python setup
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3) Install dependencies
      - name: Install schemachange & connector
        run: |
          python -m pip install --upgrade pip
          pip install schemachange snowflake-connector-python

      # 4) Validate required env vars
      - name: Validate env
        run: |
          for v in SNOWFLAKE_ACCOUNT SNOWFLAKE_USER SNOWFLAKE_PASSWORD SNOWFLAKE_ROLE SNOWFLAKE_WAREHOUSE SNOWFLAKE_DATABASE; do
            if [ -z "${!v:-}" ]; then
              echo "❌ Missing $v" && exit 1
            fi
          done
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}

      # 5) Detect changes in setup/ folder
      - name: Did setup files change?
        id: detect-setup
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            # initial push — treat all setup scripts as "changed"
            echo "run=true" >> $GITHUB_OUTPUT
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                      | grep -E '^snowflake/setup/.*\.sql' || true)
            if [ -n "$CHANGED" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      # 6) Bootstrap all schemas (if needed)
      - name: Bootstrap all schemas
        if: >
          github.event_name == 'workflow_dispatch' ||
          steps.detect-setup.outputs.run == 'true'
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_OCSP_FAIL_OPEN: "true"
        run: |
          echo "🚀 Bootstrapping schemas…"
          schemachange \
            --root-folder snowflake/setup \
            --snowflake-account "$SNOWFLAKE_ACCOUNT" \
            --snowflake-user "$SNOWFLAKE_USER" \
            --snowflake-role "$SNOWFLAKE_ROLE" \
            --snowflake-warehouse "$SNOWFLAKE_WAREHOUSE" \
            --snowflake-database "$SNOWFLAKE_DATABASE" \
            --change-history-table BOOTSTRAP_HISTORY \
            --create-change-history-table \
            -v
          echo "✅ Bootstrap complete."

      # 7) Detect changes in migration/ folder
      - name: Did migration files change?
        id: detect-migration
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            # initial push — treat all migration scripts as "changed"
            echo "run=true" >> $GITHUB_OUTPUT
          else
            MIG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                  | grep -E '^snowflake/migration/.*\.sql' || true)
            if [ -n "$MIG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      # 8) Apply incremental migrations (if needed)
      - name: Apply incremental migrations
        if: steps.detect-migration.outputs.run == 'true'
        env:
          SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE:  ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_OCSP_FAIL_OPEN: "true"
        run: |
          echo "🔁 Applying incremental migrations…"
          schemachange \
            --root-folder snowflake/migration \
            --snowflake-account "$SNOWFLAKE_ACCOUNT" \
            --snowflake-user "$SNOWFLAKE_USER" \
            --snowflake-role "$SNOWFLAKE_ROLE" \
            --snowflake-warehouse "$SNOWFLAKE_WAREHOUSE" \
            --snowflake-database "$SNOWFLAKE_DATABASE" \
            --change-history-table CHANGE_HISTORY \
            --create-change-history-table \
            -v
          echo "✅ Incremental migrations complete."

      # 9) Skip if nothing to run and not manual
      - name: Nothing to do
        if: >
          steps.detect-setup.outputs.run == 'false' &&
          steps.detect-migration.outputs.run == 'false' &&
          github.event_name != 'workflow_dispatch'
        run: echo "✔️ No setup or migration changes detected; skipping."
