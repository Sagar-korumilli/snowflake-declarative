name: ❄️ Snowflake Deploy with Per-Schema History

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install schemachange snowflake-connector-python

      - name: Validate Snowflake secrets
        env:
          SF_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SF_USER:      ${{ secrets.SNOWFLAKE_USER }}
          SF_PWD:       ${{ secrets.SNOWFLAKE_PASSWORD }}
          SF_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          SF_WH:        ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SF_DB:        ${{ secrets.SNOWFLAKE_DATABASE }}
        run: |
          for v in SF_ACCOUNT SF_USER SF_PWD SF_ROLE SF_WH SF_DB; do
            if [ -z "${!v}" ]; then
              echo "❌ Missing $v" && exit 1
            fi
          done

      - name: Write Schemachange connections.toml
        run: |
          cat > connections.toml <<EOF
[connections.default]
account   = "${{ secrets.SNOWFLAKE_ACCOUNT }}"
user      = "${{ secrets.SNOWFLAKE_USER }}"
password  = "${{ secrets.SNOWFLAKE_PASSWORD }}"
role      = "${{ secrets.SNOWFLAKE_ROLE }}"
warehouse = "${{ secrets.SNOWFLAKE_WAREHOUSE }}"
database  = "${{ secrets.SNOWFLAKE_DATABASE }}"
schema    = ""

[schemachange]
connection = "default"
EOF

      - name: Detect changes in setup/
        id: detect-setup
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            CHG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^snowflake/setup/.*\.sql' || true)
            if [ -n "$CHG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run setup scripts (bootstrap)
        if: github.event_name == 'workflow_dispatch' || steps.detect-setup.outputs.run == 'true'
        run: |
          echo "🚀 Running setup scripts for all schemas..."
          for file in snowflake/setup/*.sql; do
            [ -e "$file" ] || continue
            fname=$(basename "$file")
            schema=$(echo "$fname" | cut -d'_' -f3)  # e.g., hr from V001__hr__full_setup.sql
            echo "⚙️  Bootstrapping schema: $schema (file: $fname)"

            schemachange \
              --connection default \
              --root-folder snowflake/setup \
              --file-filter "$fname" \
              --snowflake-schema "$schema" \
              --change-history-table "CHANGE_HISTORY" \
              --create-change-history-table \
              -v
          done

      - name: Detect changes in migration/
        id: detect-migration
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            CHG=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^snowflake/migration/.*\.sql' || true)
            if [ -n "$CHG" ]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run migration scripts
        if: steps.detect-migration.outputs.run == 'true'
        run: |
          echo "🔁 Running migration scripts..."
          for file in snowflake/migration/*.sql; do
            [ -e "$file" ] || continue
            fname=$(basename "$file")
            schema=$(echo "$fname" | cut -d'_' -f3)  # e.g., hr from V001__hr__add_table.sql
            echo "📦 Applying migrations for schema: $schema (file: $fname)"

            schemachange \
              --connection default \
              --root-folder snowflake/migration \
              --file-filter "$fname" \
              --snowflake-schema "$schema" \
              --change-history-table "CHANGE_HISTORY" \
              --create-change-history-table \
              -v
          done

      - name: Nothing to do
        if: >
          steps.detect-setup.outputs.run == 'false' &&
          steps.detect-migration.outputs.run == 'false' &&
          github.event_name != 'workflow_dispatch'
        run: echo "✔️ No setup or migration changes detected; skipping."
