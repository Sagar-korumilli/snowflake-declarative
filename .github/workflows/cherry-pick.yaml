name: Selective cherry-pick on PR

on:
  issue_comment:
    types: [created]

jobs:
  cherry-pick:
    if: |
      github.event.issue.pull_request != null &&
      contains(github.event.comment.body, 'cherry-pick:')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Get PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const { data: pr } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: prNumber,
            });
            core.setOutput('target_branch', pr.base.ref);

      - name: Checkout target branch
        run: |
          git fetch origin ${{ steps.pr.outputs.target_branch }}
          git checkout ${{ steps.pr.outputs.target_branch }}

      - name: Extract commit hashes from comment
        id: extract
        run: |
          # Extract the cherry-pick list
          COMMITS=$(echo "${{ github.event.comment.body }}" | grep -oP '(?i)(?<=cherry-pick:).*' | tr -d ' ' | tr ',' '\n' | grep -E '^[0-9a-f]+$')
          echo "$COMMITS" > commits.txt
          echo "Commits to cherry-pick:"
          cat commits.txt

      - name: Cherry-pick commits
        run: |
          set -e
          while read commit; do
            [ -z "$commit" ] && continue
            echo "Cherry-picking $commit"
            git cherry-pick $commit || exit 1
          done < commits.txt

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD
