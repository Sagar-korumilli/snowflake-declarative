name: Selective Cherry-Pick PR

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Branch to pick commits from'
        required: true
        default: 'dev'
      target_branch:
        description: 'Branch to merge into'
        required: true
        default: 'release'
      commits:
        description: 'Comma-separated list of commit SHAs to cherry-pick'
        required: true
      pr_branch_prefix:
        description: 'Subpath under source_branch for PR (must match branch protection, e.g., "selective")'
        required: false
        default: 'selective'

jobs:
  selective_pr:
    name: List, Cherry-pick & Create PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch branches
        run: |
          # Fetch remote branches without modifying local checked-out branch
          git fetch origin ${{ github.event.inputs.source_branch }}
          git fetch origin ${{ github.event.inputs.target_branch }}

      - name: Show available commits
        run: |
          echo "Commits in ${{ github.event.inputs.source_branch }} not yet in ${{ github.event.inputs.target_branch }}:"
          git log --oneline origin/${{ github.event.inputs.target_branch }}..origin/${{ github.event.inputs.source_branch }}

      - name: Prepare selective branch under protection
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          # derive a new branch name by appending prefix and timestamp (avoid slash conflicts)
          SAFE_SRC=$(echo "${{ github.event.inputs.source_branch }}" | tr '/' '-')
          PR_BRANCH="${SAFE_SRC}-${{ github.event.inputs.pr_branch_prefix }}-${TIMESTAMP}"
          # branch protection allows pattern <namespace>/*, so ensure source_branch includes namespace (e.g. feature/)
          git checkout -b $PR_BRANCH origin/${{ github.event.inputs.target_branch }}
          echo "PR_BRANCH=$PR_BRANCH" >> $GITHUB_ENV

      - name: Cherry-pick selected commits
        run: |
          IFS=',' read -ra SHAS <<< "${{ github.event.inputs.commits }}"
          for sha in "${SHAS[@]}"; do
            git cherry-pick $sha || exit 1
          done

      - name: Push PR branch
        run: git push origin $PR_BRANCH

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ github.event.inputs.target_branch }}
          head: ${{ env.PR_BRANCH }}
          title: 'Selective PR: ${{ github.event.inputs.commits }}'
          body: |
            Cherry-picked commits from `${{ github.event.inputs.source_branch }}` into this PR:
            ```
            ${{ github.event.inputs.commits }}
            ```
